% Load camera parameters (replace 'cameraParams.mat' with your file)
load('../../Camera_Kalibrierung/calibrationSession_Nina.mat');

% Read the image of the checkerboard
image = imread('./Images/checkerboard_Color.jpg'); % replace with your image file

% Detect the checkerboard corners in the image
[imagePoints, boardSize] = detectCheckerboardPoints(image);

% Define the world coordinates of checkerboard corners
% This depends on the size of your checkerboard and the dimensions of the squares
squareSize = 30; % square size in millimeters
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Estimate the pose of the checkerboard
[rotationMatrix, translationVector] = extrinsics(imagePoints, worldPoints, cameraParams);

% Select a corner point to find its position (e.g., first corner)
cornerIndex = 1;
cornerWorldPoint = worldPoints(cornerIndex, :);

% Transform the corner point from world to camera coordinates
cornerCameraPoint = worldToCamera(cameraParams, rotationMatrix, translationVector, cornerWorldPoint);

% Display the result
fprintf('Position of the corner in camera coordinates (in mm):\n X: %f\n Y: %f\n Z: %f\n', cornerCameraPoint);
